[user]
	email = fer.b.1990@gmail.com
	name = Fernando Barrios
[alias]
	# cherry-pick aliases
	cp = cherry-pick
	cpc = cherry-pick --continue
	cps = cherry-pick --skip
	cpa = cherry-pick --abort
	
	# rebase aliases
	rbc = rebase --continue
	rbs = rebase --skip
	rba = rebase --abort
	# sync
	sync = fetch -p --all
	# View abbreviated SHA, description, and history graph of the latest 20 commits
	l = log --pretty=oneline -n 20 --graph --abbrev-commit
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	# View the current working tree status using the short format
	s = status -s
	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
	# `git di $number` shows the diff between the state `$number` revisions ago and the current state
	di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
	# Remove all local branches that starts with Regex
	clb = "!f() { git branch --list $1* | sed 's/^* //' | xargs -r git branch -D; }; f"
	# Switch to a branch, creating it if necessary
	go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"
	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v
	# List aliases
	aliases = config --get-regexp alias
	# Amend the currently staged files to the latest commit
	amend = commit --amend --no-edit
	# Interactive rebase with the given number of latest commits
	reb = "!r() { git rebase -i HEAD~$1; }; r"
	# List contributors with number of commits
	contributors = shortlog --summary --numbered
[apply]
	# Detect whitespace errors when applying a patch
	whitespace = fix
[core]
	autocrlf = input
	editor = nano
[push]
	autoSetupRemote = true
[commit]
	gpgsign = true
